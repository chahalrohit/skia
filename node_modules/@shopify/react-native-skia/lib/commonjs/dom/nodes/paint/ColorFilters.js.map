{"version":3,"names":["ColorFilterDeclaration","JsiDeclarationNode","constructor","ctx","type","props","DeclarationType","ColorFilter","addChild","child","Error","insertChildBefore","before","compose","filter","children","_children","length","Skia","MakeCompose","reduce","acc","materialize","MatrixColorFilterNode","NodeType","MatrixColorFilter","matrix","cf","MakeMatrix","BlendColorFilterNode","BlendColorFilter","mode","color","Color","MakeBlend","BlendMode","enumKey","LinearToSRGBGammaColorFilterNode","LinearToSRGBGammaColorFilter","MakeLinearToSRGBGamma","SRGBToLinearGammaColorFilterNode","SRGBToLinearGammaColorFilter","MakeSRGBToLinearGamma","LumaColorFilterNode","LumaColorFilter","MakeLumaColorFilter","LerpColorFilterNode","LerpColorFilter","t","first","second","MakeLerp"],"sources":["ColorFilters.ts"],"sourcesContent":["import { BlendMode } from \"../../../skia/types\";\nimport type { SkColorFilter } from \"../../../skia/types\";\nimport type { NodeContext } from \"../Node\";\nimport { JsiDeclarationNode } from \"../Node\";\nimport type {\n  BlendColorFilterProps,\n  MatrixColorFilterProps,\n  Node,\n} from \"../../types\";\nimport { DeclarationType, NodeType } from \"../../types\";\nimport { enumKey } from \"../datatypes/Enum\";\nimport type { LerpColorFilterProps } from \"../../types/ColorFilters\";\n\nexport abstract class ColorFilterDeclaration<\n  P,\n  Nullable extends null | never = never\n> extends JsiDeclarationNode<P, SkColorFilter, Nullable> {\n  constructor(ctx: NodeContext, type: NodeType, props: P) {\n    super(ctx, DeclarationType.ColorFilter, type, props);\n  }\n\n  addChild(child: Node<unknown>) {\n    if (!(child instanceof ColorFilterDeclaration)) {\n      throw new Error(`Cannot add child of type ${child.type} to ${this.type}`);\n    }\n    super.addChild(child);\n  }\n\n  insertChildBefore(child: Node<unknown>, before: Node<unknown>): void {\n    if (!(child instanceof ColorFilterDeclaration)) {\n      throw new Error(`Cannot add child of type ${child.type} to ${this.type}`);\n    }\n    super.insertChildBefore(child, before);\n  }\n\n  compose(filter: SkColorFilter) {\n    const children = this._children as ColorFilterDeclaration<unknown>[];\n    if (this._children.length === 0) {\n      return filter;\n    } else {\n      return this.Skia.ColorFilter.MakeCompose(\n        filter,\n        children.reduce<SkColorFilter | null>((acc, child) => {\n          if (acc === null) {\n            return child.materialize();\n          }\n          return this.Skia.ColorFilter.MakeCompose(acc, child.materialize());\n        }, null) as SkColorFilter\n      );\n    }\n  }\n}\n\nexport class MatrixColorFilterNode extends ColorFilterDeclaration<MatrixColorFilterProps> {\n  constructor(ctx: NodeContext, props: MatrixColorFilterProps) {\n    super(ctx, NodeType.MatrixColorFilter, props);\n  }\n\n  materialize() {\n    const { matrix } = this.props;\n    const cf = this.Skia.ColorFilter.MakeMatrix(matrix);\n    return this.compose(cf);\n  }\n}\n\nexport class BlendColorFilterNode extends ColorFilterDeclaration<BlendColorFilterProps> {\n  constructor(ctx: NodeContext, props: BlendColorFilterProps) {\n    super(ctx, NodeType.BlendColorFilter, props);\n  }\n\n  materialize() {\n    const { mode } = this.props;\n    const color = this.Skia.Color(this.props.color);\n    const cf = this.Skia.ColorFilter.MakeBlend(color, BlendMode[enumKey(mode)]);\n    return this.compose(cf);\n  }\n}\n\nexport class LinearToSRGBGammaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.LinearToSRGBGammaColorFilter, null);\n  }\n\n  materialize() {\n    const cf = this.Skia.ColorFilter.MakeLinearToSRGBGamma();\n    return this.compose(cf);\n  }\n}\n\nexport class SRGBToLinearGammaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.SRGBToLinearGammaColorFilter, null);\n  }\n\n  materialize() {\n    const cf = this.Skia.ColorFilter.MakeSRGBToLinearGamma();\n    return this.compose(cf);\n  }\n}\n\nexport class LumaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.LumaColorFilter, null);\n  }\n\n  materialize() {\n    const cf = this.Skia.ColorFilter.MakeLumaColorFilter();\n    return this.compose(cf);\n  }\n}\n\nexport class LerpColorFilterNode extends ColorFilterDeclaration<LerpColorFilterProps> {\n  constructor(ctx: NodeContext, props: LerpColorFilterProps) {\n    super(ctx, NodeType.LerpColorFilter, props);\n  }\n\n  materialize() {\n    const { t } = this.props;\n    const [first, second] = this.children() as JsiDeclarationNode<\n      unknown,\n      SkColorFilter\n    >[];\n    return this.Skia.ColorFilter.MakeLerp(\n      t,\n      first.materialize(),\n      second.materialize()\n    );\n  }\n}\n"],"mappings":"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"}